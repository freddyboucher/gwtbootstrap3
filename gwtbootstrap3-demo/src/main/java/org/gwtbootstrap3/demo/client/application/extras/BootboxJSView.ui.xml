<!--
  #%L
  GwtBootstrap3
  %%
  Copyright (C) 2013 GwtBootstrap3
  %%
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
  #L%
  -->
<ui:UiBinder xmlns:ui="urn:ui:com.google.gwt.uibinder" xmlns:b="urn:import:org.gwtbootstrap3.client.ui"
    xmlns:b.html="urn:import:org.gwtbootstrap3.client.ui.html" xmlns:d="urn:import:org.gwtbootstrap3.demo.client.ui">

  <ui:style>
    .danger {
      background-color: #fcf2f2;
      border-color: #dFb5b4;
    }

    .margin-fix {
      margin-top: 0 !important;
    }

    .spacing {
      margin-left: 5px;
    }
  </ui:style>

  <b:Row>
    <b:Column size="XS_12">

      <b:PageHeader text="Bootbox"/>

      <b:BlockQuote>
        <b.html:Strong>Original Library Link:</b.html:Strong>
        <b:Anchor target="_blank" addStyleNames="{style.spacing}" href="http://bootboxjs.com/">Bootbox.js</b:Anchor>
        <b.html:Br/>
        <b.html:Strong>Current Version Supported: 6.0.4</b.html:Strong>
      </b:BlockQuote>

      <b:BlockQuote addStyleNames="{style.danger}">
        <b:Heading addStyleNames="{style.margin-fix}" size="H4" text="Required for use"/>
        <b.html:Paragraph>
          To use Bootbox, you must first add the extras module to your project. In Maven:
        </b.html:Paragraph>
        <d:PrettyPre addStyleNames="lang-xml">
          &lt;dependency&gt;\n
          \s\s\s\s&lt;groupId&gt;org.gwtbootstrap3&lt;/groupId&gt;\n
          \s\s\s\s&lt;artifactId&gt;gwtbootstrap3-extras&lt;/artifactId&gt;\n
          \s\s\s\s&lt;version&gt;VERSION&lt;/version&gt;\n
          \s\s\s\s&lt;scope&gt;provided&lt;/scope&gt;\n &lt;/dependency&gt;
        </d:PrettyPre>
        <b.html:Paragraph>
          Then you need to inherit the following GWT Module
          <strong>additionally</strong>
          to any GwtBootstrap3
          module into your *.gwt.xml of your project:
        </b.html:Paragraph>
        <d:PrettyPre addStyleNames="lang-xml">
          &lt;inherits name="org.gwtbootstrap3.extras.bootbox.Bootbox"/&gt;
        </d:PrettyPre>
        <b.html:Paragraph>
          Then, you can call static method from Bootbox class in GWT client code:
        </b.html:Paragraph>
        <d:PrettyPre addStyleNames="lang-java">
          Bootbox.alert("Message");
        </d:PrettyPre>
      </b:BlockQuote>

      <b:Panel>
        <b:PanelHeader>
          <b:Heading size="H3" text="Default Locale"/>
        </b:PanelHeader>
        <b:PanelBody>
          <b:Form type="INLINE">
            <b:FormGroup>
              <b:FormLabel for="localeBox">Select Default Locale:</b:FormLabel>
              <b:ListBox b:id="localeBox" ui:field="localeBox" addStyleNames="{style.spacing}"/>
            </b:FormGroup>
          </b:Form>
        </b:PanelBody>
        <b:PanelFooter>
          <d:PrettyPre addStyleNames="lang-java">
            @UiHandler(&quot;localeBox&quot;)\n
            void onChangeLanguage(ChangeEvent event) {\n
            \sString locale = localeBox.getSelectedValue();\n
            \sBootbox.setLocale(BootboxLocale.valueOf(locale));\n
            }
          </d:PrettyPre>
        </b:PanelFooter>
      </b:Panel>

      <b:Panel>
        <b:PanelHeader>
          <b:Heading size="H3" text="Alert"/>
        </b:PanelHeader>
        <b:PanelBody>
          <b:Button type="PRIMARY" icon="PLAY" ui:field="alertButton">Alert</b:Button>
          <b:Button addStyleNames="{style.spacing}" type="PRIMARY" icon="PLAY" ui:field="alertCallbackButton">Alert With Callback</b:Button>
          <b:Button addStyleNames="{style.spacing}" type="PRIMARY" icon="PLAY" ui:field="alertOptionsButton">Alert With Options</b:Button>
        </b:PanelBody>
        <b:PanelFooter>
          <d:PrettyPre addStyleNames="lang-java">
            /@UiHandler(&quot;alertButton&quot;)\n
            void handleAlertButton(ClickEvent event) {\n
            \sBootbox.alert(&quot;Hello World&quot;);\n
            }\n
            \n
            @UiHandler(&quot;alertCallbackButton&quot;)\n
            void handleAlertCallbackButton(ClickEvent event) {\n
            \sBootbox.alert(&quot;Alert With Callback&quot;, () -&gt; Window.alert(&quot;My Alert Callback&quot;));\n
            }\n
            \n
            @UiHandler(&quot;alertOptionsButton&quot;)\n
            void handleAlertOptionsButton(ClickEvent event) {\n
            \sAlertOptions options = AlertOptions.newOptions(&quot;Alert With Options&quot;);\n
            \soptions.setSize(BootboxSize.LARGE);\n
            \soptions.animate = false;\n
            \soptions.backdrop = null;\n
            \soptions.title = &quot;Custome Alert Title&quot;;\n
            \soptions.closeButton = false;\n
            \sBootbox.alert(options);\n
            }
          </d:PrettyPre>
        </b:PanelFooter>
      </b:Panel>

      <b:Panel>
        <b:PanelHeader>
          <b:Heading size="H3" text="Confirm"/>
        </b:PanelHeader>
        <b:PanelBody>
          <b:Button type="PRIMARY" icon="PLAY" ui:field="confirmButton">Confirm</b:Button>
          <b:Button addStyleNames="{style.spacing}" type="PRIMARY" icon="PLAY" ui:field="confirmOptionsButton">Confirm With Options
          </b:Button>
        </b:PanelBody>
        <b:PanelFooter>
          <d:PrettyPre addStyleNames="lang-java">
            @UiHandler(&quot;confirmButton&quot;)\n
            void handleConfirmButton(ClickEvent event) {\n
            \sBootbox.confirm(&quot;Hello World&quot;, result -&gt; Window.alert(&quot;Return: &quot; + result));\n
            }\n
            \n
            @UiHandler(&quot;confirmOptionsButton&quot;)\n
            void handleConfirmOptionsButton(ClickEvent event) {\n
            \sConfirmOptions options = ConfirmOptions.newOptions(&quot;Confirm With Options&quot;);\n
            \soptions.setSize(BootboxSize.SMALL);\n
            \soptions.animate = false;\n
            \soptions.backdrop = null;\n
            \soptions.title = &quot;Custome Confirm Title&quot;;\n
            \soptions.closeButton = false;\n
            \soptions.callback = result -&gt; Window.alert(&quot;Return: &quot; + result);\n
            \sBootbox.confirm(options);\n
            }
          </d:PrettyPre>
        </b:PanelFooter>
      </b:Panel>

      <b:Panel>
        <b:PanelHeader>
          <b:Heading size="H3" text="Prompt"/>
        </b:PanelHeader>
        <b:PanelBody>
          <b:Button type="PRIMARY" icon="PLAY" ui:field="promptButton">Prompt</b:Button>
          <b:Button addStyleNames="{style.spacing}" type="PRIMARY" icon="PLAY" ui:field="promptOptionsButton">Prompt With Options</b:Button>
        </b:PanelBody>
        <b:PanelFooter>
          <d:PrettyPre addStyleNames="lang-java">
            @UiHandler(&quot;promptButton&quot;)\n
            void handlePromptButton(ClickEvent event) {\n
            \sBootbox.prompt(&quot;Hello World&quot;, result -&gt; Window.alert(&quot;Return: &quot; + result));\n
            }\n
            \n
            @UiHandler(&quot;promptOptionsButton&quot;)\n
            void handlePromptOptionsButton(ClickEvent event) {\n
            \sPromptOptions options = PromptOptions.newOptions(&quot;Prompt With Options&quot;);\n
            \soptions.animate = false;\n
            \soptions.backdrop = null;\n
            \soptions.title = &quot;Custome Prompt Title&quot;;\n
            \soptions.closeButton = false;\n
            \soptions.callback = result -&gt; Window.alert(&quot;Return: &quot; + result);\n
            \sBootbox.prompt(options);\n
            }
          </d:PrettyPre>
        </b:PanelFooter>
      </b:Panel>

      <b:Panel>
        <b:PanelHeader>
          <b:Heading size="H3" text="Custom Dialog"/>
        </b:PanelHeader>
        <b:PanelBody>
          <b:Button type="PRIMARY" icon="PLAY" ui:field="dialogButton">Custom Dialog</b:Button>
        </b:PanelBody>
        <b:PanelFooter>
          <d:PrettyPre addStyleNames="lang-java">
            @UiHandler(&quot;dialogButton&quot;)\n
            void handleDialogButton(ClickEvent event) {\n
            \sDialogOptions options = DialogOptions.newOptions(&quot;I am a custom dialog&quot;);\n
            \soptions.title = &quot;Custom title&quot;;\n
            \soptions.onEscape = () -&gt; Window.alert(&quot;On Escape!&quot;);\n
            \soptions.addButton(&quot;Success!&quot;, ButtonType.SUCCESS.getCssName(), () -&gt; Window.alert(&quot;Success callback!&quot;));\n
            \soptions.addButton(&quot;Danger!&quot;, ButtonType.DANGER.getCssName(), () -&gt; Window.alert(&quot;Danger callback!&quot;));\n
            \soptions.addButton(&quot;Click ME!&quot;);\n
            \sBootbox.dialog(options);\n
            }
          </d:PrettyPre>
        </b:PanelFooter>
      </b:Panel>
    </b:Column>
  </b:Row>

</ui:UiBinder>
