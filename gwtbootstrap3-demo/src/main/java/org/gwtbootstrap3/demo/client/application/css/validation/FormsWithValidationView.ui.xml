<!--
  #%L
  GwtBootstrap3
  %%
  Copyright (C) 2013 - 2015 GwtBootstrap3
  %%
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at
  
       http://www.apache.org/licenses/LICENSE-2.0
  
  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
  #L%
  -->
<ui:UiBinder xmlns:ui="urn:ui:com.google.gwt.uibinder" xmlns:g="urn:import:com.google.gwt.user.client.ui"
    xmlns:b="urn:import:org.gwtbootstrap3.client.ui" xmlns:d="urn:import:org.gwtbootstrap3.demo.client.ui">
    <ui:style>
    .footer button {
         margin-right: 5px;
    }
    
    .resultHeader {
         text-decoration: underline;
    }
    
    .resultBody {
         color: blue;
    }
    </ui:style>
    <b:Row>
        <b:Column size="XS_12">
            <b:PageHeader text="Forms with Validation" />
            <b:Panel>
                <b:PanelHeader>
                    <b:Heading size="H3" text="JSR-303 Bean Validation" />
                </b:PanelHeader>
                <b:PanelBody>
                    <b:Column size="XS_6">
                        <b:Panel>
                            <b:PanelHeader>
                                <b:Heading size="H3" text="Login" />
                            </b:PanelHeader>
                            <b:PanelBody ui:field="body" />
                            <b:PanelFooter addStyleNames="{style.footer}">
                                <b:Button type="PRIMARY" ui:field="loginButton">Login</b:Button>
                                <b:Button type="DANGER" ui:field="resetButton">Reset</b:Button>
                            </b:PanelFooter>
                        </b:Panel>
                    </b:Column>
                    <b:Column size="XS_6">
                        <b:Heading size="H4" addStyleNames="{style.resultHeader}" text="Login Result" />
                        <g:HTMLPanel>
                            <div class="{style.resultBody}" ui:field="result" />
                        </g:HTMLPanel>
                    </b:Column>
                </b:PanelBody>
                <b:PanelFooter>
                    <b:Heading size="H5" text="Bean with JSR-303 validation annotations:" />
                    <d:PrettyPre addStyleNames="lang-java"><![CDATA[
public class Credentials implements Serializable {\n\n
\s\sprivate String password = null;\n\n
\s\sprivate String username = null;\n\n
\s\s@NotNull\n
\s\s@Size(min = 4, max = 12)\n
\s\spublic String getPassword() {\n
\s\s\s\sreturn password;\n
\s\s}\n\n
\s\s@NotNull\n
\s\spublic String getUsername() {\n
\s\s\s\sreturn username;\n
\s\s}\n\n
\s\spublic void setPassword(final String password) {\n
\s\s\s\sthis.password = password;\n
\s\s}\n\n
\s\spublic void setUsername(final String username) {\n
\s\s\s\sthis.username = username;\n
\s\s}\n\n
\s\s@Override\n
\s\spublic String toString() {\n
\s\s\s\sreturn "Credentials [username=" + username + ", password=" + password + "]";\n
\s\s}\n\n
}
                    ]]></d:PrettyPre>
                    <b:Heading size="H5" text="Create a validation factory:" />
                    <d:PrettyPre addStyleNames="lang-java"><![CDATA[
public class FormsValidationFactory extends AbstractGwtValidatorFactory {\n\n
\s\s@GwtValidation(Credentials.class)\n
\s\spublic interface GwtValidator extends Validator {\n
\s\s}\n\n
\s\s@Override\n
\s\spublic AbstractGwtValidator createValidator() {\n
\s\s\s\sreturn GWT.create(GwtValidator.class);\n
\s\s}\n\n
}
                    ]]></d:PrettyPre>
                    <b:Heading size="H5" text="Add validation to gwt module:" />
                    <d:PrettyPre addStyleNames="lang-xml"><![CDATA[
<inherits name="org.hibernate.validator.HibernateValidator" />\n
\s\s<replace-with class="org.gwtbootstrap3.demo.client.application.css.validation.FormsValidationFactory">\n
\s\s<when-type-is class="javax.validation.ValidatorFactory" />\n
</replace-with>
                    ]]></d:PrettyPre>
                    <b:Heading size="H5" text="Create an editor:" />
                    <d:PrettyPre addStyleNames="lang-java"><![CDATA[
public class CredentialsEditor extends Composite implements Editor<Credentials> {\n\n
\s\spublic interface Binder extends UiBinder<Form, CredentialsEditor> {\n
\s\s}\n\n
\s\sprivate static final Binder BINDER = GWT.create(Binder.class);\n\n
\s\s@UiField\n
\s\sprotected Input password;\n\n
\s\s@UiField\n
\s\sprotected TextBox username;\n\n
\s\s@Inject\n
\s\spublic CredentialsEditor() {\n
\s\sinitWidget(BINDER.createAndBindUi(this));\n
\s\s}\n\n
}
                     ]]></d:PrettyPre>
                    <d:PrettyPre addStyleNames="lang-xml"><![CDATA[
<b:Form>\n
\s\s<b:FieldSet>\n
\s\s\s\s<b:FormGroup>\n
\s\s\s\s\s\s<b:FormLabel for="username">User</b:FormLabel>\n
\s\s\s\s\s\s<b:InlineHelpBlock iconType="EXCLAMATION_TRIANGLE" />\n
\s\s\s\s\s\s<b:TextBox b:id="username" ui:field="username" />\n
\s\s\s\s</b:FormGroup>\n
\s\s\s\s<b:FormGroup>\n
\s\s\s\s\s\s<b:FormLabel for="password">Password</b:FormLabel>\n
\s\s\s\s\s\s<b:InlineHelpBlock iconType="EXCLAMATION_TRIANGLE" />\n
\s\s\s\s\s\s<b:Input type="PASSWORD" ui:field="password" b:id="password" />\n
\s\s\s\s</b:FormGroup>\n
\s\s</b:FieldSet>\n
</b:Form>\n
                    ]]></d:PrettyPre>
                    <b:Heading size="H5" text="Create and use the driver:" />
                    <d:PrettyPre addStyleNames="lang-java"><![CDATA[
public class FormsWithValidationView extends ViewImpl implements FormsWithValidationPresenter.MyView {\n\n
\s\sinterface Binder extends UiBinder<Widget, FormsWithValidationView> {\n
\s\s}\n\n
\s\sinterface CredentialDriver extends SimpleBeanEditorDriver<Credentials, CredentialsEditor> {\n
\s\s}\n\n
\s\sprivate static final CredentialDriver DRIVER = GWT.create(CredentialDriver.class);\n\n
\s\s@Ignore\n
\s\s@UiField\n
\s\sprotected PanelBody body;\n\n
\s\s@Ignore\n
\s\s@UiField\n
\s\sprotected DivElement result;\n\n
\s\s@Inject\n
\s\sFormsWithValidationView(final Binder uiBinder, CredentialsEditor editor) {\n
\s\s\s\sinitWidget(uiBinder.createAndBindUi(this));\n
\s\s\s\sbody.add(editor);\n
\s\s\s\sDRIVER.initialize(editor);\n
\s\s}\n\n
\s\s@Override\n
\s\sprotected void onAttach() {\n
\s\s\s\ssuper.onAttach();\n
\s\s\s\sDRIVER.edit(new Credentials());\n
\s\s}\n\n
\s\s@UiHandler("resetButton")\n
\s\spublic void onResetClick(ClickEvent event) {\n
\s\s\s\sDRIVER.edit(new Credentials());\n
\s\s\s\sresult.removeAllChildren();\n
\s\s}\n\n
\s\s@UiHandler("loginButton")\n
\s\spublic void onLoginClick(ClickEvent event) {\n
\s\s\s\sCredentials creds = DRIVER.flush();\n\n
\s\s\s\sValidator validator = Validation.buildDefaultValidatorFactory().getValidator();\n
\s\s\s\sSet<ConstraintViolation<Credentials>> violations = validator.validate(creds, Default.class);\n
\s\s\s\sif (violations.size() > 0) {\n
\s\s\s\s\s\sDRIVER.setConstraintViolations(new ArrayList<ConstraintViolation<?>>(violations));\n
\s\s\s\s}\n\n
\s\s\s\sif (!DRIVER.hasErrors()) {\n
\s\s\s\s\s\sresult.setInnerText(creds.toString());\n
\s\s\s\s}\n
\s\s}\n\n
}
                     ]]></d:PrettyPre>
                </b:PanelFooter>
            </b:Panel>
        </b:Column>
    </b:Row>
</ui:UiBinder>
